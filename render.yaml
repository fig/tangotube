services:
  - type: web
    name: tangotube-web
    region: frankfurt
    plan: starter plus
    env: ruby
    buildCommand: ./bin/render-build.sh
    startCommand: export PATH="$PATH:$HOME/project/src/yt-dlp"; bundle exec puma -C config/puma.rb
    domains:
      - tangotube.tv
    disk:
      name: data
      mountPath: /var/lib/data
      sizeGB: 5
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tangotube-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: tangotube-redis
          type: redis
          property: connectionString
      - key: ELASTICSEARCH_URL
        fromService:
          name: tangotube-elasticsearch
          type: pserv
          property: hostport
      - fromGroup: tangotube-environment-group

  - type: worker
    name: tangotube-sidekiq
    region: frankfurt
    plan: standard
    env: ruby
    buildCommand: ./bin/render-build.sh
    startCommand: export PATH="$PATH:$HOME/project/src/yt-dlp"; bundle exec sidekiq -e production
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tangotube-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: tangotube-redis
          type: redis
          property: connectionString
      - key: ELASTICSEARCH_URL
        fromService:
          name: tangotube-elasticsearch
          type: pserv
          property: hostport
      - fromGroup: tangotube-environment-group

  - type: cron
    name: tangotube-cron
    env: ruby
    region: frankfurt
    schedule: 0 3 * * *
    buildCommand: bundle install
    startCommand: >
      bundle exec rake performance:createPerformances

    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: tangotube-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: tangotube-db
          property: connectionString
      - fromGroup: tangotube-environment-group

  - name: tangotube-redis
    type: redis
    plan: starter
    region: frankfurt
    ipAllowList:
      - source: "0.0.0.0/0"
        description: home
    maxmemoryPolicy: allkeys-lru

  - type: pserv
    name: tangotube-elasticsearch
    env: docker
    dockerfilePath: "./elasticsearch/Dockerfile"
    region: frankfurt
    plan: standard
    disk:
      name: esdata
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 50
    autoDeploy: false
    envVars:
    - key: ES_JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    - key: discovery.type
      value: single-node
    - key: cluster.name
      value: elastic

databases:
  - name: tangotube-db
    plan: standard
    region: frankfurt
    ipAllowList:
      - source: "0.0.0.0/0"
        description: home

envVarGroups:
  - name: tangotube-environment-group
    envVars:
      - key: RAILS_MASTER_KEY
        sync: false
