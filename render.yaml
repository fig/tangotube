services:
  - type: web
    name: tangotube-web
    env: ruby
    region: frankfurt # or oregon
    plan: starter
    numInstances: 1
    buildCommand: ./bin/render-build.sh
    startCommand: REDIS_URL="redis://${REDIS_HOST}" bundle exec puma -C config/puma.rb
    # domains:
      # - tangotube.tv
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tangotube-db
          property: connectionString
      - key: REDIS_HOST
        fromService:
          name: tangotube-redis
          type: pserv
          property: hostport
      - key: RAILS_MASTER_KEY
        sync: false

  - type: worker
    name: tangotube-sidekiq
    env: ruby
    region: frankfurt # or oregon
    plan: starter
    buildCommand: bundle install && bundle exec rake assets:precompile
    startCommand: REDIS_URL="redis://${REDIS_HOST}" bundle exec sidekiq -e production
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tangotube-db
          property: connectionString
      - key: REDIS_HOST
        fromService:
          name: tangotube-redis
          type: pserv
          property: hostport
      - key: RAILS_MASTER_KEY
        sync: false

  - type: pserv
    name: tangotube-redis
    env: docker
    region: frankfurt # or oregon
    repo: https://github.com/render-examples/redis.git
    numInstances: 1
    disk:
      name: tangotube-redis-data
      mountPath: /var/lib/redis
      sizeGB: 1

  - type: pserv
    name: tangotube-elasticsearch
    env: docker
    plan: standard
    disk:
      name: esdata
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 10
    autoDeploy: false # so ES does not restart on a push to this repository.
    envVars:
    - key: ES_JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    - key: discovery.type
      value: single-node
    - key: cluster.name
      value: elastic

databases:
  - name: tangotube-db
    plan: starter
    region: frankfurt # or oregon
